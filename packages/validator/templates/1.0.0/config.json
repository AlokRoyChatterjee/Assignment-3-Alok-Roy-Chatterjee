{
	"ois": {
		"__arrayItem": {
			"__template": "ois.json",
			"apiSpecifications": {
				"components": {
					"securitySchemes": {
						"__conditions": [
							{
								"__if": {
									"__this_name": ".*"
								},
								"__rootThen": {
									"environment": {
										"securitySchemes": {
											"__any": {
												"oisTitle": {
													"__regexp": "^[['/', '{{0}}', '{{1}}', 'title']]$"
												},
												"name": {
													"__regexp": "^__match$"
												}
											}
										}
									}
								},
								"__catch": {
									"__message": "Security scheme __match from __fullPath must be present in __prefix{{0}}.environment.securitySchemes"
								}
							}
						]
					}
				}
			}
		}
	},
	"triggers": {
		"rrp": {
			"__arrayItem": {
				"endpointId": {
					"__regexp": "^0x[a-fA-F0-9]{64}$"
				},
				"oisTitle": {
					"__type": "string"
				},
				"endpointName": {
					"__type": "string"
				},
				"__conditions": [
					{
						"__if": {
							"oisTitle": ".*"
						},
						"__rootThen": {
							"ois": {
								"__any": {
									"title": {
										"__regexp": "^__match$"
									},
									"endpoints": {
										"__any": {
											"name": {
												"__regexp": "[['endpointName']]"
											}
										}
									}
								}
							}
						},
						"__catch": {
							"__message": "OIS \"[['oisTitle']]\" must contain endpoint \"'[['endpointName']]\", as it is specified in {{0}}.{{1}}.{{2}}.{{3}}"
						}
					}
				]
			}
		}
	},
	"chains": {
		"__arrayItem": {
			"id": {
				"__type": "string"
			},
			"type": {
				"__regexp": "^evm$",
				"__catch": {
					"__message": "__fullPath: Currently only \"evm\" is supported"
				}
			},
			"providerNames": {
				"__arrayItem": {
					"__conditions": [
						{
							"__if": {
								"__this": ".*"
							},
							"__rootThen": {
								"environment": {
									"chainProviders": {
										"__any": {
											"name": {
												"__regexp": "^__match$"
											}
										}
									}
								}
							},
							"__catch": {
								"__message": "Provider __match from __fullPath must be included in environment.chainProviders"
							}
						}
					]
				}
			},
			"contracts": {
				"AirnodeRrp": {
					"__regexp": "^0x[a-fA-F0-9]{40}$"
				}
			},
			"authorizers": {
				"__arrayItem": {
					"__regexp": "^0x[a-fA-F0-9]{40}$"
				}
			},
			"__optional": {
				"blockHistoryLimit": {
					"__type": "number"
				},
				"minConfirmations": {
					"__type": "number"
				},
				"ignoreBlockedRequestsAfterBlocks": {
					"__type": "number"
				}
			}
		}
	},
	"nodeSettings": {
		"nodeVersion": {
			"__regexp": "^1.0.0$",
			"__catch": {
				"__message": "__fullPath: nodeVersion should be set to 1.0.0"
			}
		},
		"cloudProvider": {
			"__regexp": "^aws$",
			"__catch": {
				"__message": "__fullPath: Currently only \"aws\" is supported"
			}
		},
		"region": {
			"__type": "string"
		},
		"stage": {
			"__regexp": "^[a-zA-Z0-9-_]{1,16}$",
			"__catch": {
				"__message": "__fullPath can contain only alphanumeric characters, '-' or '_' and cannot be longer than 16 characters"
			}
		},
		"logFormat": {
			"__regexp": "^(json|plain)$",
			"__catch": {
				"__message": "__fullPath: Allowed values are \"json\" or \"plain\""
			}
		},
		"logLevel": {
			"__regexp": "^(DEBUG|INFO|WARN|ERROR)$",
			"__catch": {
				"__message": "__fullPath: Allowed values are \"DEBUG\", \"INFO\", \"WARN\" or \"ERROR\""
			}
		},
		"__optional": {
			"heartbeat": {
				"enabled": {
					"__type": "bool"
				},
				"url": {
					"__regexp": "^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)$"
				},
				"apiKey": {
					"__type": "string"
				},
				"id": {
					"__type": "string"
				}
			},
			"httpGateway": {
				"enabled": {
					"__type": "bool"
				},
				"apiKey": {
					"__regexp": "^.{30,60}$",
					"__catch": {
						"__message": "__fullPath: The key must have a length of between 30 - 120 characters."
					}
				}
			},
			"airnodeWalletMnemonic": {
				"__type": "string"
			}
		}
	},
	"environment": {
		"securitySchemes": {
			"__arrayItem": {
				"oisTitle": {
					"__type": "string"
				},
				"name": {
					"__type": "string"
				},
				"envName": {
					"__regexp": "^[a-zA-Z0-9_]+$",
					"__catch": {
						"__message": "__fullPath: only alphanumeric characters and '_' are allowed"
					}
				},
				"__conditions": [
					{
						"__if": {
							"oisTitle": ".*"
						},
						"__rootThen": {
							"ois": {
								"__any": {
									"title": {
										"__regexp": "^__match$"
									},
									"apiSpecifications": {
										"security": {
											"__any": {
												"__keyRegexp": "^[['name']]$"
											}
										}
									}
								}
							}
						},
						"__catch": {
							"__message": "OIS \"[['oisTitle']]\" must contain security scheme \"[['name']]\", as it is specified in {{0}}.{{1}}.{{2}}"
						}
					}
				]
			}
		},
		"chainProviders": {
			"__arrayItem": {
				"chainType": {
					"__type": "string"
				},
				"chainId": {
					"__type": "string"
				},
				"name": {
					"__type": "string"
				},
				"envName": {
					"__regexp": "^[a-zA-Z0-9_]+$",
					"__catch": {
						"__message": "__fullPath: only alphanumeric characters or '_' are allowed"
					}
				},
				"__conditions": [
					{
						"__if": {
							"name": ".*"
						},
						"__rootThen": {
							"chains": {
								"__any": {
									"providerNames": {
										"__any": {
											"__regexp": "^[['name']]$"
										}
									},
									"id": {
										"__regexp": "^[['chainId']]$"
									},
									"type": {
										"__regexp": "^[['chainType']]$"
									}
								}
							}
						},
						"__catch": {
							"__message": "chains must contain entry with provider: \"[['name']]\", id: \"[['chainId']]\" and type: \"[['chainType']]\", as it is specified in {{0}}.{{1}}.{{2}}.{{3}}"
						}
					}
				]
			}
		}
	}
}